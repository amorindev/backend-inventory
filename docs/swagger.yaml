basePath: /v1
definitions:
  categories.Category:
    properties:
      cat_id:
        type: integer
      cat_name:
        type: string
    required:
    - cat_name
    type: object
  kardex.Kardex:
    properties:
      kardex_created_at:
        type: string
      kardex_description:
        type: string
      kardex_id:
        type: integer
      kardex_products:
        items:
          $ref: '#/definitions/kardex.KardexProduct'
        type: array
      kardex_type:
        type: string
    required:
    - kardex_description
    - kardex_products
    - kardex_type
    type: object
  kardex.KardexProduct:
    properties:
      pro_kar_amount:
        description: Cantidad movida en la
        minimum: 0
        type: integer
      prod_id:
        description: ID del producto
        type: integer
      prod_name:
        type: string
    type: object
  product.Product:
    properties:
      cat_id:
        type: integer
      prod_desc:
        type: string
      prod_discount:
        description: campo omitido 0
        minimum: 0
        type: integer
      prod_id:
        type: integer
      prod_name:
        type: string
      prod_price:
        minimum: 0
        type: number
      prod_stk:
        minimum: 0
        type: integer
    required:
    - cat_id
    - prod_desc
    - prod_name
    - prod_price
    - prod_stk
    type: object
host: localhost:7000
info:
  contact: {}
  description: Api for an app of inventory
  title: Inventory api
  version: "1.0"
paths:
  /categories:
    get:
      description: Return the list of categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/categories.Category'
            type: array
      summary: Get all categories
      tags:
      - categories
  /kardex:
    get:
      description: Return the list of kardex entries
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/kardex.Kardex'
            type: array
      summary: Get all kardex entries
      tags:
      - kardex
    post:
      consumes:
      - application/json
      description: Create a new kardex
      parameters:
      - description: Kardex to be created
        in: body
        name: kardex
        required: true
        schema:
          $ref: '#/definitions/kardex.Kardex'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/kardex.Kardex'
      summary: Create kardex
      tags:
      - kardex
  /products:
    get:
      description: Return the list of products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product.Product'
            type: array
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product
      parameters:
      - description: Product to be created
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Product'
      summary: Create product
      tags:
      - products
  /products/{id}:
    delete:
      description: Delete a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Product successfully deleted
      summary: Delete product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product to be updated
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Product'
      summary: Update product
      tags:
      - products
swagger: "2.0"
